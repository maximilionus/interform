name: Unit Testing

on:
  push:
    branches-ignore:
      - "docs**"
    paths-ignore:
      - "LICENSE"
      - "README.md"
      - "CHANGELOG.md"
      - ".github/workflows/docs.yml"
      - "examples/**"
  pull_request:
    branches-ignore:
      - "docs**"

jobs:
  src_test:
    name: source code tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9, "3.10"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies and project
        run: |
          python -m pip install -U pip
          pip install -r requirements-dev.txt

      - name: Run unit tests
        run: python -m pytest -v

  built_tests:
    name: built package tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.5, 3.6, 3.7, 3.8, 3.9, "3.10"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build project dist
        run: |
          python -m pip install -U pip pipenv
          python -m pipenv install -r requirements-dev.txt
          python -m pipenv run make build_dist

      - name: Install built project
        run: |
          cd dist
          python -c "from os import rename; from glob import glob; rename(glob('serialix*.tar.gz')[0], 'serialix.tar.gz')"
          python -m pip install serialix.tar.gz[test]

      - name: Run tests
        run: python -m pytest --pyargs serialix.tests
